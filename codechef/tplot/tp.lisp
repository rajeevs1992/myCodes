(defun main ()
    (let ((a '()) (bonus '()) (b '()) (int '()))
        (dotimes (x 6)
            (setf a (append a (list (read))))
        )
        (setf bonus (read))
        (dotimes (x 5)
            (setf b '())
            (setf int '())
            (dotimes (y 6)
                (setf b (append b (list (read))))
            )
            (setf int (intersection a b))
            (cond
                ((= (length int) 6)
                    (princ "First Parking slot")
                    (terpri)
                )
                ((and (= (length int) 5) (member bonus b))
                    (princ "Second Parking slot")
                    (terpri)
                )
                ((= (length int) 5)
                    (princ "Third Parking slot")
                    (terpri)
                )
                ((= (length int) 4)
                    (princ "Fourth Parking slot")
                    (terpri)
                )
                ((= (length int) 3)
                    (princ "Fifth Parking slot")
                    (terpri)
                )
                (t
                    (princ "No Parking slot")
                    (terpri)
                )
            )
        )
    )
)
(main)
(quit 0)
